port: 57661
socks-port: 57662
redir-port: 57663
tproxy-port: 57666
mixed-port: 57665
allow-lan: true
mode: script
log-level: info
ipv6: false
external-controller: 127.0.0.1:57664
dns:
  enable: true
  ipv6: false
  enhanced-mode: fake-ip
  listen: 0.0.0.0:53
  fallback-filter:
    geoip: true
    geoip-code: ID
    ipcidr:
      - 0.0.0.0/8
      - 10.0.0.0/8
      - 100.64.0.0/10
      - 127.0.0.0/8
      - 169.254.0.0/16
      - 172.16.0.0/12
      - 192.0.0.0/24
      - 192.0.2.0/24
      - 192.88.99.0/24
      - 192.168.0.0/16
      - 198.18.0.0/15
      - 198.51.100.0/24
      - 203.0.113.0/24
      - 224.0.0.0/4
      - 240.0.0.0/4
      - 255.255.255.255/32
    domain:
      - +.google.com
      - +.netflix.com
      - +.facebook.com
      - +.youtube.com
      - +.githubusercontent.com
      - +.googlevideo.com
      - +.msftconnecttest.com
      - +.msftncsi.com
      - msftconnecttest.com
      - msftncsi.com
  fake-ip-filter:
    - +.pool.ntp.org
    - ntp7.*.com
    - ntp6.*.com
    - ntp5.*.com
    - ntp4.*.com
    - ntp3.*.com
    - ntp2.*.com
    - ntp1.*.com
    - ntp.*.com
    - time7.*.com
    - time6.*.com
    - time5.*.com
    - time4.*.com
    - time3.*.com
    - time2.*.com
    - time1.*.com
    - time.*.apple.com
    - time.*.edu.cn
    - time.*.gov
    - time.*.com
    - "*.home.arpa"
    - "*.local"
    - "*.test"
    - "*.localhost"
    - "*.invalid"
    - "*.example"
    - "*.localdomain"
    - time1.cloud.tencent.com
    - "*.ntp.org"
    - "*.time.edu"
    - "*.lan"
  fake-ip-range: 198.18.0.1/16
  default-nameserver:
    - 8.8.8.8
    - 8.8.4.4
    - 1.1.1.1
    - 1.0.0.1
  nameserver:
    - 1.1.1.1
    - 1.0.0.1
    - https://cloudflare.com/dns-query
  fallback:
    - https://dns.cloudflare.com/dns-query
    - https://1.1.1.1/dns-query
    - tls://1.1.1.1:853
proxy-providers:
  MASTER1:
    type: file
    path: profiles/1659677537650.yml
    health-check:
      enable: true
      url: http://www.gstatic.com/generate_204
      interval: 99
  MASTER2:
    type: file
    path: profiles/1659677541372.yml
    health-check:
      enable: true
      url: http://www.gstatic.com/generate_204
      interval: 99
proxy-groups:
  - name: SIMASTER-LOADBALANCE
    type: load-balance
    strategy: round-robin
    disable-udp: false
    proxies:
      - WAN1
      - WAN2
    url: http://www.gstatic.com/generate_204
    interval: "99"
  - name: WAN1
    type: select
    disable-udp: false
    use:
      - MASTER1
    url: http://www.gstatic.com/generate_204
    interval: "99"
  - name: WAN2
    type: select
    disable-udp: false
    use:
      - MASTER2
    url: http://www.gstatic.com/generate_204
    interval: "99"
  - name: PORT-GAME
    type: select
    disable-udp: false
    use:
      - MASTER1
      - MASTER2
    url: http://www.gstatic.com/generate_204
    interval: "99"
rule-providers:
  Master-Umum:
    type: file
    behavior: classical
    path: profiles/1659677533053.yml
  Master-Game:
    type: file
    behavior: classical
    path: profiles/1659677523789.yml
script:
  code: >
    def main(ctx, metadata):
        ruleset_action = {"Master-Umum": "SIMASTER-LOADBALANCE",
            "Master-Game": "PORT-GAME",
          }

        port = int(metadata["dst_port"])

        if metadata["network"] == "UDP":
            if port == "21,22,23,53,80,81,443,853,5353,8000,8008,8080,8081,8090,8443,8888":
                ctx.log('[Script] matched QUIC traffic use SIMASTER-LOADBALANCE')
                return "SIMASTER-LOADBALANCE"

        if metadata["dst_ip"] == "":
            metadata["dst_ip"] = ctx.resolve_ip(metadata["host"])

        port_list = [21, 22, 23, 53, 80, 81, 443, 853, 5353, 8000, 8008, 8080, 8081, 8090, 8443, 8888]
        if port not in port_list:
            ctx.log('[Script] not common port use PORT-GAME')
            return "PORT-GAME"

        if metadata["dst_ip"] == "":
            return "SIMASTER-LOADBALANCE"

        for ruleset in ruleset_action:
            if ctx.rule_providers[ruleset].match(metadata):
                return ruleset_action[ruleset]

        code = ctx.geoip(metadata["dst_ip"])
        if code == "ID":
            ctx.log('[Script] Geoip ID')
            return "SIMASTER-LOADBALANCE"

        ctx.log('[Script] SIMASTER-LOADBALANCE')
        return "SIMASTER-LOADBALANCE"
rules:
  - MATCH,SIMASTER-LOADBALANCE
  - IP-CIDR,198.18.0.1/16,REJECT,no-resolve
  - RULE-SET,Master-Umum,SIMASTER-LOADBALANCE
  - RULE-SET,Master-Game,PORT-GAME
  - GEOIP,ID,SIMASTER-LOADBALANCE
tun:
  enable: true
  stack: system
  auto-route: false
  auto-detect-interface: false
  dns-hijack:
    - tcp://any:53
profile:
  store-selected: true
  store-fake-ip: true
secret: 93a8407b-ea3f-43df-9e59-7950d8b63ab3
bind-address: "*"
